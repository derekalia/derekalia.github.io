{"version":3,"sources":["media/headshot.png","media/medium.svg","media/twitter.svg","media/linkedin.svg","media/github.svg","components/Bio.js","components/Home.js","components/Resume.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Bio","react_default","a","createElement","Body","styled","div","withConfig","displayName","componentId","Home","FlexBox","HeadImg","src","headshot","Title","components_Bio","LinkHolder","SocialImg","github","onClick","navigate","twitter","linkedin","medium","img","Resume","App","document","title","AppWrapper","es","components_Home","path","components_Resume","_templateObject","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,wDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,yDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,sMCczBC,MAXf,WACE,OACEC,EAAAC,EAAAC,cAACC,EAAD,sCACgCH,EAAAC,EAAAC,cAAA,0BADhC,gBAEEF,EAAAC,EAAAC,cAAA,WAFF,uDAE6D,IAC3DF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,WAJF,kBAIuBF,EAAAC,EAAAC,cAAA,mBAJvB,oBAI2CF,EAAAC,EAAAC,cAAA,mBAJ3C,kBAWEC,EAAOC,IAAOC,IAAVC,WAAA,CAAAC,YAAA,YAAAC,YAAA,gBAAGJ,CAAH,wJCqCKK,MA3Cf,WACE,OACET,EAAAC,EAAAC,cAACQ,EAAD,KACEV,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACS,EAAD,CAASC,IAAKC,OAEhBb,EAAAC,EAAAC,cAACY,EAAD,mBACAd,EAAAC,EAAAC,cAACa,EAAD,MAMAf,EAAAC,EAAAC,cAACc,EAAD,KACEhB,EAAAC,EAAAC,cAACe,EAAD,CACEL,IAAKM,IACLC,QAAS,WACPC,YAAQ,mCAGZpB,EAAAC,EAAAC,cAACe,EAAD,CACEL,IAAKS,IACLF,QAAS,WACPC,YAAQ,mCAGZpB,EAAAC,EAAAC,cAACe,EAAD,CACEL,IAAKU,IACLH,QAAS,WACPC,YAAQ,6CAGZpB,EAAAC,EAAAC,cAACe,EAAD,CACEL,IAAKW,IACLJ,QAAS,WACPC,YAAQ,uCAUdV,EAAUN,IAAOC,IAAVC,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAGJ,CAAH,2EAOPO,EAAUP,IAAOoB,IAAVlB,WAAA,CAAAC,YAAA,gBAAAC,YAAA,gBAAGJ,CAAH,kBAIPU,EAAQV,IAAOC,IAAVC,WAAA,CAAAC,YAAA,cAAAC,YAAA,gBAAGJ,CAAH,kDAcLa,GAReb,IAAOC,IAAVC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,uFAQAA,IAAOoB,IAAVlB,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,iCAKTY,EAAaZ,IAAOC,IAAVC,WAAA,CAAAC,YAAA,mBAAAC,YAAA,gBAAGJ,CAAH,oKC/EDqB,MAJf,WACE,OAAOzB,EAAAC,EAAAC,cAAA,2ICcMwB,MAZf,WAEE,OADAC,SAASC,MAAQ,aAEf5B,EAAAC,EAAAC,cAAC2B,EAAD,KACE7B,EAAAC,EAAAC,cAAC4B,EAAA,EAAD,KACE9B,EAAAC,EAAAC,cAAC6B,EAAD,CAAMC,KAAK,MACXhC,EAAAC,EAAAC,cAAC+B,EAAD,CAAQD,KAAK,eAQfH,EAAazB,IAAOC,IAAV6B,KCPIC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASf,SAASgB,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.3c2ef124.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/headshot.1166f7ab.png\";","module.exports = __webpack_public_path__ + \"static/media/medium.d93c8770.svg\";","module.exports = __webpack_public_path__ + \"static/media/twitter.d922b65c.svg\";","module.exports = __webpack_public_path__ + \"static/media/linkedin.dcde5ccb.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.a4c32417.svg\";","import React from \"react\";\nimport styled from \"styled-components/macro\";\n\nfunction Bio() {\n  return (\n    <Body>\n      Full-stack engineer living in <b>San Francisco</b> ðŸŒ‰\n      <br /> Currently building a decentralized content platform{\" \"}\n      <b>Tribes â›º</b>\n      <br /> Previously at <b>Simplr</b> ðŸ¤–and <b>Aragon</b> ðŸ¦…\n    </Body>\n  );\n}\n\nexport default Bio;\n\nconst Body = styled.div`\n  max-width: 470px;\n  min-width: 140px;\n  width: 50vw;\n  text-align: center;\n`;\n","import React from \"react\";\nimport { Link, navigate } from \"@reach/router\";\nimport styled from \"styled-components/macro\";\nimport Bio from \"./Bio\";\nimport headshot from \"../media/headshot.png\";\nimport medium from \"../media/medium.svg\";\nimport twitter from \"../media/twitter.svg\";\nimport linkedin from \"../media/linkedin.svg\";\nimport github from \"../media/github.svg\";\n\nfunction Home() {\n  return (\n    <FlexBox>\n      <div>\n        <HeadImg src={headshot} />\n      </div>\n      <Title>Derek Alia</Title>\n      <Bio />\n      {/* <ResumeHolder>\n        <Link style={{ \"text-decoration\": \"none\", color: \"black\" }} to=\"resume\">\n          Resume\n        </Link>\n      </ResumeHolder> */}\n      <LinkHolder>\n        <SocialImg\n          src={github}\n          onClick={() => {\n            navigate(`https://github.com/derekalia`);\n          }}\n        />\n        <SocialImg\n          src={twitter}\n          onClick={() => {\n            navigate(`http://twitter.com/derekalia`);\n          }}\n        />\n        <SocialImg\n          src={linkedin}\n          onClick={() => {\n            navigate(`https://www.linkedin.com/in/derekalia/`);\n          }}\n        />\n        <SocialImg\n          src={medium}\n          onClick={() => {\n            navigate(`https://medium.com/@derekalia`);\n          }}\n        />\n      </LinkHolder>\n    </FlexBox>\n  );\n}\n\nexport default Home;\n\nconst FlexBox = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  margin-top: 10%;\n`;\n\nconst HeadImg = styled.img`\n  width: 250px;\n`;\n\nconst Title = styled.div`\n  font-size: 28px;\n  font-weight: bold;\n  margin: 30px;\n`;\n\nconst ResumeHolder = styled.div`\n  margin-top: 30px;\n  margin-bottom: 30px;\n  text-align: left;\n  display: flex;\n  font-weight: bold;\n`;\n\nconst SocialImg = styled.img`\n  width: 40px;\n  cursor: pointer;\n`;\n\nconst LinkHolder = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: row;\n  margin-top: 40px;\n  margin-bottom: 40px;\n  max-width: 450px;\n  min-width: 140px;\n  width: 50vw;\n  justify-content: space-around;\n`;\n","import React from \"react\";\n\nfunction Resume() {\n  return <div>This is Resume</div>;\n}\n\nexport default Resume;\n","import React from \"react\";\nimport Home from \"./components/Home\";\nimport Resume from \"./components/Resume\";\nimport { Router } from \"@reach/router\";\nimport styled from \"styled-components\";\nfunction App() {\n  document.title = \"Derek Alia\";\n  return (\n    <AppWrapper>\n      <Router>\n        <Home path=\"/\" />\n        <Resume path=\"/resume\" />\n      </Router>\n    </AppWrapper>\n  );\n}\n\nexport default App;\n\nconst AppWrapper = styled.div`\n  font-family: \"Roboto\", sans-serif;\n`;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}